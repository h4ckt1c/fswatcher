#!/bin/bash

ctrl_c() {
    echo "[*] Caught ctrl-c, exiting..."
    kill $pid > /dev/null 2>&1
    wait $pid 2>/dev/null
    exit
}
pid=
trap "ctrl_c $pid" INT

if [ -z "$1" ] || [ -z "$2" ]; then
    echo
    echo "Usage: $0 <command> <filename>"
    echo "Example: '$0 python test.py' will monitor test.py and trigger 'python test.py' on change"
    echo
    exit
fi
if ! which $1 2>&1 > /dev/null; then
    echo "Error, $2 not found (in \$PATH)\nExiting..." && exit
fi
if [ ! -r $2 ]; then
    echo "Error, $2 not readable\nExiting..." && exit
fi

$1 $2 &
pid=$!
died=1

while ((1)); do
    if ! ps -p $pid 2>&1 > /dev/null && [ ! -z $died ]; then
        echo "[*] $pid Died"
        died=
    fi
    oldval=$(stat --format="%z" $2)
    sleep 1
    newval=$(stat --format="%z" $2)
    if [ "$newval" != "$oldval" ]; then
        if [ ! -z $pid ]; then
            if ps -p $pid 2>&1 > /dev/null; then
                kill $pid
                wait $pid 2>/dev/null
                echo "[*] pid $pid killed"
            fi
        fi
        $1 $2 &
        pid=$!
        died=$pid
        echo -e "\n#####################################################################\n"
    fi
done
